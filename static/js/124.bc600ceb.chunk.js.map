{"version":3,"file":"static/js/124.bc600ceb.chunk.js","mappings":"2PACA,GAAgB,IAAM,uB,SCqBtB,EApBiB,SAAH,GAA8C,IAAD,IAAvCA,MAASC,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAUC,EAAK,EAALA,MAE3C,OACE,iBAAKC,UAAWC,EAAAA,OAAS,WACvB,gBACEC,IAAI,uIACJC,IAAI,WAEN,4BACG,IACAN,EAAK,cAAYC,EAAS,YAAUC,MAEvC,iBAAKC,UAAWC,EAAAA,QAAU,WACxB,mBAAQD,UAAWC,EAAAA,IAAM,SAAC,UAC1B,mBAAQD,UAAWC,EAAAA,IAAM,SAAC,gBAIlC,ECnBA,GAAgB,QAAU,yBAAyB,SAAW,0BAA0B,OAAS,wBAAwB,YAAc,6BAA6B,MAAQ,wBCY5K,EAVgB,SAAH,GAAqB,IAAfG,EAAO,EAAPA,QACjB,OACE,iBAAKJ,UAAWC,EAAAA,OAAS,WACvB,yBAAMG,EAAQC,MACd,gBAAKL,UAAWC,EAAAA,MAAQ,SAAEG,EAAQE,SAClC,gBAAKN,UAAWC,EAAAA,KAAO,SAAEG,EAAQG,SAGvC,EC0EMC,GAAmBC,EAAAA,EAAAA,GAAU,CACjCC,KAAM,WADiBD,EAnBL,SAACE,GACnB,IAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IACrC,OACE,kBAAMC,SAAUH,EAAMI,aAAa,WACjC,0BACGC,EAAAA,EAAAA,IACC,qBACA,UACA,CAACC,EAAAA,EAAUL,GACXM,EAAAA,OAGJ,0BACE,mBAAQlB,UAAWC,EAAAA,IAAM,SAAC,aAIlC,IAKA,EA/EgB,SAAH,GAWN,IAAD,IAVJkB,YACEC,EAAgB,EAAhBA,iBACAC,EAAS,EAATA,UAKFC,GAJU,EAARC,SACe,EAAfC,gBACW,EAAXC,YAEQ,EAAVH,YACAI,EAAW,EAAXA,YACAC,EAAmB,EAAnBA,oBAEIC,EAAM,yCAEVC,EAAAA,EAAAA,YAAU,WACRC,MAAM,GAAD,OAAIF,EAAG,UACTG,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GAAI,OAAKR,EAAYQ,EAAK,GACrC,GAAG,CAACN,KAEJC,EAAAA,EAAAA,YAAU,WACRM,GACF,GAAG,CAACP,IAEJ,IAAMO,EAAS,yCAAG,mGACVL,MAAM,GAAD,OAAIF,EAAG,UACfG,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GAAI,OAAKP,EAAoBO,EAAK,IACxCE,OAAM,SAACC,GAAK,OAAKC,QAAQC,IAAIF,EAAM,IAAE,KAAD,sCACxC,kBALc,mCAWXG,EAAkBpB,EAAiBqB,KAAI,SAACC,GAAC,OAC3C,SAAC,EAAQ,CAAC9C,MAAO8C,GAAQA,EAAErC,GAAM,IAE/BsC,EAAgBtB,EAAUoB,KAAI,SAACG,EAAGC,GAAK,OACzC,SAAC,EAAO,CAACzC,QAASwC,GAAQA,EAAEvC,GAAM,IAOpC,OACE,4BACE,gBAAKL,UAAWC,EAAAA,aAAe,SAAEuC,KACjC,gBAAKxC,UAAWC,EAAAA,SAAW,SAAE0C,KAC7B,gBAAK3C,UAAWC,EAAAA,YAAc,UAC5B,SAACO,EAAgB,CAACM,SATF,SAACgC,GACrBxB,EAAWwB,EAAO1C,QACpB,QAWF,EC9CA,GAAe2C,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAPoB,SAACC,GACrB,MAAO,CACL9B,YAAa8B,EAAM9B,YAEvB,GAG2B,CACvBG,WAAAA,EAAAA,GACAI,YAAaA,EAAAA,GACbC,oBAAqBA,EAAAA,KAEvBuB,EAAAA,EANF,CAOEC,E","sources":["webpack://react-1/./src/components/Dialogs/UserItem/UserItem.module.css?d7b7","components/Dialogs/UserItem/UserItem.jsx","webpack://react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"UserItem_btn__6kSAw\"};","import s from \"./UserItem.module.css\";\r\n\r\nconst UserItem = ({ users: { name, username, email } }) => {\r\n  // let path = \"/dialogs/\" + users.id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQRwZsyf5DxP_1f2efMNz_jBvlAeytorE4Ac65wwMk3jsPl8M68875c3VNwCZPRfVPCWuo&usqp=CAU\"\r\n        alt=\"image\"\r\n      />\r\n      <span>\r\n        {\" \"}\r\n        {name} username:\"{username}\" email: {email}\r\n      </span>\r\n      <div className={s.buttons}>\r\n        <button className={s.btn}>edit</button>\r\n        <button className={s.btn}>delete</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__157OQ\",\"messages\":\"Dialogs_messages__YMo1p\",\"dialog\":\"Dialogs_dialog__OQGAY\",\"formMessage\":\"Dialogs_formMessage__4ne6R\",\"title\":\"Dialogs_title__WlFGN\"};","import s from \"./../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = ({ message }) => {\r\n  return (\r\n    <div className={s.dialog}>\r\n      <div>{message.id}</div>\r\n      <div className={s.title}>{message.title}</div>\r\n      <div className={s.body}>{message.body}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect } from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { createField, Textarea } from \"../Common/FormsControls/FormsControls\";\r\nimport UserItem from \"./UserItem/UserItem\";\r\nimport DialogItem from \"./UserItem/UserItem\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = ({\r\n  dialogsPage: {\r\n    dialogsDataUsers,\r\n    postsData,\r\n    pageSize,\r\n    totalUsersCount,\r\n    currentPage,\r\n  },\r\n  addMessage,\r\n  addAllPosts,\r\n  setDialogsDataUsers,\r\n}) => {\r\n  let url = \"https://jsonplaceholder.typicode.com/\";\r\n\r\n  useEffect(() => {\r\n    fetch(`${url}posts`)\r\n      .then((response) => response.json())\r\n      .then((data) => addAllPosts(data));\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  const fetchData = async () => {\r\n    await fetch(`${url}users`)\r\n      .then((response) => response.json())\r\n      .then((data) => setDialogsDataUsers(data))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onAdd = async () => {\r\n    await fetch(`${url}users`);\r\n  };\r\n\r\n  let dialogsElements = dialogsDataUsers.map((u) => (\r\n    <UserItem users={u} key={u.id} />\r\n  ));\r\n  let postsElements = postsData.map((m, index) => (\r\n    <Message message={m} key={m.id} />\r\n  ));\r\n\r\n  const addNewMessage = (values) => {\r\n    addMessage(values.message); //add our message to BLL\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>{postsElements}</div>\r\n      <div className={s.formMessage}>\r\n        <DialogsReduxForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DialogsForm = (props) => {\r\n  const maxLength40 = maxLengthCreator(40);\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        {createField(\r\n          \"Enter your message\",\r\n          \"message\",\r\n          [required, maxLength40],\r\n          Textarea\r\n        )}\r\n      </div>\r\n      <div>\r\n        <button className={s.btn}>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst DialogsReduxForm = reduxForm({\r\n  form: \"dialogs\",\r\n})(DialogsForm);\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n  addAllMessages,\r\n  addAllPosts,\r\n  addMessage,\r\n  setDialogsDataUsers,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    addMessage,\r\n    addAllPosts: addAllPosts,\r\n    setDialogsDataUsers: setDialogsDataUsers,\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n\r\n//we connect our data to store and make container component\r\n"],"names":["users","name","username","email","className","s","src","alt","message","id","title","body","DialogsReduxForm","reduxForm","form","props","maxLength40","maxLengthCreator","onSubmit","handleSubmit","createField","required","Textarea","dialogsPage","dialogsDataUsers","postsData","addMessage","pageSize","totalUsersCount","currentPage","addAllPosts","setDialogsDataUsers","url","useEffect","fetch","then","response","json","data","fetchData","catch","error","console","log","dialogsElements","map","u","postsElements","m","index","values","compose","connect","state","withAuthRedirect","Dialogs"],"sourceRoot":""}